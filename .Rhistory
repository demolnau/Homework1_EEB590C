library(knitr)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("formatR")
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data)
#TODO ADD LABELS AND TITLE TO PLOT
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data)
title(main = "Uncorrelated Data",
xlab = "X (Independent Varible)", ylab = "Y (Dependent Varible)")
#TODO ADD LABELS AND TITLE TO PLOT
title(main = "Uncorrelated Data")
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data)
title(main = "Uncorrelated Data")
#TODO ADD LABELS AND TITLE TO PLOT
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data)
title(main = "Uncorrelated Data",  xlab = "X (Independent Varible)", ylab = "Y (Dependent Varible)")
#TODO ADD LABELS AND TITLE TO PLOT
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data,
main = "Uncorrelated Data",
xlab = "X (Independent Varible)",
ylab = "Y (Dependent Varible)")
#TODO ADD LABELS AND TITLE TO PLOT
#data set with positive association between x & Y
library(mvtnorm)
library(tidyverse)
corr.val <- .9
pos_cor_gen<- function(elements) {
cor_data<-data.frame(rmvnorm(n=elements,mean=c(0,0),sigma=matrix(c(1,corr.val,corr.val,1),2,2)))
names(cor_data)[1]<-"x1"
names(cor_data)[2]<- "y1"
return(cor_data)
}
pos_cor_data<-pos_cor_gen(100)
#Random Uncorrelated Data List
uncor_data_sim<-replicate(100,random_corr_gen(100), simplify = FALSE)
#Random Correlated Data List
cor_data_sim<-replicate(100, pos_cor_gen(100), simplify = FALSE)
#cor_data_sim
#cor_data_sim[[1]] #shows the first list of 100 elements
#cor_data_sim[[1]][,1] #shows column x of the first list of 100 elements
View(uncor_data)
View(uncor_data_sim)
View(uncor_data)
View(pos_cor_data)
View(cor_data_sim)
#Random Uncorrelated Data List
uncor_data_sim<-replicate(100,random_corr_gen(100), simplify = FALSE)
#Random Correlated Data List
cor_data_sim<-replicate(100, pos_cor_gen(100), simplify = FALSE)
#cor_data_sim
#cor_data_sim[[1]] #shows the first list of 100 elements
#cor_data_sim[[1]][,1] #shows column x of the first list of 100 elements
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
#TODO -> sum up the pvalues that were less than 0.05
#model 2 - positively correlated model
lm_cor_tests<-lapply(cor_data_sim,lm, formula = y1~x1)
summary_lm_cor_tests<-lapply(lm_cor_tests,summary)
#TODO -> sum up the pvalues that were less than 0.05
View(uncor_data)
View(uncor_data_sim)
View(summary_lm_uncor_tests)
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
#TODO -> sum up the pvalues that were less than 0.05
#model 2 - positively correlated model
lm_cor_tests<-lapply(cor_data_sim,lm, formula = y1~x1)
summary_lm_cor_tests<-lapply(lm_cor_tests,summary)
#TODO -> sum up the pvalues that were less than 0.05
#Random Uncorrelated Data List
uncor_data_sim<-replicate(100,random_corr_gen(100), simplify = FALSE)
#Random Correlated Data List
cor_data_sim<-replicate(100, pos_cor_gen(100), simplify = FALSE)
#cor_data_sim
#cor_data_sim[[1]] #shows the first list of 100 elements
#cor_data_sim[[1]][,1] #shows column x of the first list of 100 elements
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
#TODO -> sum up the pvalues that were less than 0.05
#Random Uncorrelated Data List
uncor_data_sim<-replicate(100,random_corr_gen(100), simplify = FALSE)
#Random Correlated Data List
cor_data_sim<-replicate(100, pos_cor_gen(100), simplify = FALSE)
#cor_data_sim
#cor_data_sim[[1]] #shows the first list of 100 elements
#cor_data_sim[[1]][,1] #shows column x of the first list of 100 elements
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
#TODO -> sum up the pvalues that were less than 0.05
#model 2 - positively correlated model
lm_cor_tests<-lapply(cor_data_sim,lm, formula = y1~x1)
summary_lm_cor_tests<-lapply(lm_cor_tests,summary)
#TODO -> sum up the pvalues that were less than 0.05
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
#TODO -> sum up the pvalues that were less than 0.05
View(summary_lm_uncor_tests)
View(lm_uncor_tests)
summary_lm_uncor_tests[[1]][["adj.r.squared"]]
summary_lm_uncor_tests[[1]][["r.squared"]]
View(summary_lm_uncor_tests)
rm(list=ls()) #remove unwanted variables and start on clear slate
#load in libraries
library(mvtnorm)
#Random Uncorrelated Data List
uncor_data <- list()
sum_slopes_uncor_data <- 0
for (i in 1:100) {
tmp <- list(rnorm(100, mean = 0, sd = 0.3)) #generate 100 uncorrelated points
name <- paste('simulatation ', i, sep='') #make name for indexing later
uncor_data[[name]] <- tmp # add simulation to list
tmp_model <- lm(1:100 ~ tmp[[1]]) #make linear model
uncor_data[[name]][["linear_model"]] <- tmp_model #add linear model to list
uncor_data[[name]][["summary"]] <- summary(tmp_model) #summarize the fit of the linear model
uncor_data[[name]][["anova"]] <- anova(tmp_model) #get model term tests
sum_slopes_uncor_data <- sum_slopes_uncor_data + uncor_data[[name]][["linear_model"]][["coefficients"]][["tmp[[1]]"]]
}
#Random Correlated Data List
cor_data <- list()
View(uncor_data)
anova_lm_uncor_tests<-lapply(lm_uncor_tests,anova)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("formatR")
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data,
main = "Uncorrelated Data",
xlab = "X (Independent Varible)",
ylab = "Y (Dependent Varible)")
#TODO ADD LABELS AND TITLE TO PLOT
#data set with positive association between x & Y
library(mvtnorm)
library(tidyverse)
corr.val <- .9
pos_cor_gen<- function(elements) {
cor_data<-data.frame(rmvnorm(n=elements,mean=c(0,0),sigma=matrix(c(1,corr.val,corr.val,1),2,2)))
names(cor_data)[1]<-"x1"
names(cor_data)[2]<- "y1"
return(cor_data)
}
pos_cor_data<-pos_cor_gen(100)
#Random Uncorrelated Data List
uncor_data_sim<-replicate(100,random_corr_gen(100), simplify = FALSE)
#Random Correlated Data List
cor_data_sim<-replicate(100, pos_cor_gen(100), simplify = FALSE)
#cor_data_sim
#cor_data_sim[[1]] #shows the first list of 100 elements
#cor_data_sim[[1]][,1] #shows column x of the first list of 100 elements
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
anova_lm_uncor_tests<-lapply(lm_uncor_tests,anova)
#TODO -> sum up the pvalues that were less than 0.05
View(anova_lm_uncor_tests)
anova_lm_uncor_tests[[1]][["Pr(>F)"]]
anova_lm_uncor_tests[[2]]
rm(list=ls()) #remove unwanted variables and start on clear slate
#load in libraries
library(mvtnorm)
#Random Uncorrelated Data List
uncor_data <- list()
sum_slopes_uncor_data <- 0
for (i in 1:100) {
tmp <- list(rnorm(100, mean = 0, sd = 0.3)) #generate 100 uncorrelated points
name <- paste('simulatation ', i, sep='') #make name for indexing later
uncor_data[[name]] <- tmp # add simulation to list
tmp_model <- lm(1:100 ~ tmp[[1]]) #make linear model
uncor_data[[name]][["linear_model"]] <- tmp_model #add linear model to list
uncor_data[[name]][["summary"]] <- summary(tmp_model) #summarize the fit of the linear model
uncor_data[[name]][["anova"]] <- anova(tmp_model) #get model term tests
sum_slopes_uncor_data <- sum_slopes_uncor_data + uncor_data[[name]][["linear_model"]][["coefficients"]][["tmp[[1]]"]]
}
#unlisted <- unlist(uncor_data[["simulatation 1"]])
#ununlisted <- unlist(unlisted)
#sum_slope_uncor_data_new <- lapply(uncor_data[[]][["linear_model"]][["coefficients"]][["tmp[[1]]"]], FUN = sum)
#sum_slope_uncor_data <- tapply(unlist(uncor_data[[]]), unlisted[["linear_model.coefficients.tmp[[1]]"]], lengths(uncor_data[[]])), FUN = sum)
View(uncor_data)
uncor_data[["simulatation 1"]][["anova"]][["Pr(>F)"]]
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("formatR")
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data,
main = "Uncorrelated Data",
xlab = "X (Independent Varible)",
ylab = "Y (Dependent Varible)")
#TODO ADD LABELS AND TITLE TO PLOT
#data set with positive association between x & Y
library(mvtnorm)
library(tidyverse)
corr.val <- .9
pos_cor_gen<- function(elements) {
cor_data<-data.frame(rmvnorm(n=elements,mean=c(0,0),sigma=matrix(c(1,corr.val,corr.val,1),2,2)))
names(cor_data)[1]<-"x1"
names(cor_data)[2]<- "y1"
return(cor_data)
}
pos_cor_data<-pos_cor_gen(100)
#Random Uncorrelated Data List
uncor_data_sim<-replicate(100,random_corr_gen(100), simplify = FALSE)
#Random Correlated Data List
cor_data_sim<-replicate(100, pos_cor_gen(100), simplify = FALSE)
#cor_data_sim
#cor_data_sim[[1]] #shows the first list of 100 elements
#cor_data_sim[[1]][,1] #shows column x of the first list of 100 elements
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
anova_lm_uncor_tests<-lapply(lm_uncor_tests,anova)
#TODO -> sum up the pvalues that were less than 0.05
View(anova_lm_uncor_tests)
anova_lm_uncor_tests[[1]][["Pr(>F)"]]
sum_pvalue_uncor <- lapply(anova_lm_uncor_tests[[1:100]][["Pr(>F)"]],anova)
sum_pvalue_uncor <- lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]],anova)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("formatR")
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data,
main = "Uncorrelated Data",
xlab = "X (Independent Varible)",
ylab = "Y (Dependent Varible)")
#TODO ADD LABELS AND TITLE TO PLOT
#data set with positive association between x & Y
library(mvtnorm)
library(tidyverse)
corr.val <- .9
pos_cor_gen<- function(elements) {
cor_data<-data.frame(rmvnorm(n=elements,mean=c(0,0),sigma=matrix(c(1,corr.val,corr.val,1),2,2)))
names(cor_data)[1]<-"x1"
names(cor_data)[2]<- "y1"
return(cor_data)
}
pos_cor_data<-pos_cor_gen(100)
#Random Uncorrelated Data List
uncor_data_sim<-replicate(100,random_corr_gen(100), simplify = FALSE)
#Random Correlated Data List
cor_data_sim<-replicate(100, pos_cor_gen(100), simplify = FALSE)
#cor_data_sim
#cor_data_sim[[1]] #shows the first list of 100 elements
#cor_data_sim[[1]][,1] #shows column x of the first list of 100 elements
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
anova_lm_uncor_tests<-lapply(lm_uncor_tests,anova)
sum_pvalue_uncor <- lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]],anova)
#TODO -> sum up the pvalues that were less than 0.05
rm(list=ls()) #remove unwanted variables and start on clear slate
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("formatR")
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data,
main = "Uncorrelated Data",
xlab = "X (Independent Varible)",
ylab = "Y (Dependent Varible)")
#TODO ADD LABELS AND TITLE TO PLOT
#data set with positive association between x & Y
library(mvtnorm)
library(tidyverse)
corr.val <- .9
pos_cor_gen<- function(elements) {
cor_data<-data.frame(rmvnorm(n=elements,mean=c(0,0),sigma=matrix(c(1,corr.val,corr.val,1),2,2)))
names(cor_data)[1]<-"x1"
names(cor_data)[2]<- "y1"
return(cor_data)
}
pos_cor_data<-pos_cor_gen(100)
#Random Uncorrelated Data List
uncor_data_sim<-replicate(100,random_corr_gen(100), simplify = FALSE)
#Random Correlated Data List
cor_data_sim<-replicate(100, pos_cor_gen(100), simplify = FALSE)
#cor_data_sim
#cor_data_sim[[1]] #shows the first list of 100 elements
#cor_data_sim[[1]][,1] #shows column x of the first list of 100 elements
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
anova_lm_uncor_tests<-lapply(lm_uncor_tests,anova)
sum_pvalue_uncor <- lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]],anova)
#TODO -> sum up the pvalues that were less than 0.05
sum_pvalue_uncor <- lapply(anova_lm_uncor_tests[[1]][["Pr(>F)"]],anova)
sum_pvalue_uncor <- lapply(anova_lm_uncor_tests[[1]][["Pr(>F)"]],sum)
View(anova_lm_uncor_tests)
anova_lm_uncor_tests[[1]][["Pr(>F)"]]
anova_lm_uncor_tests[[1]][["Pr(>F)"]][1]
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
anova_lm_uncor_tests<-lapply(lm_uncor_tests,anova)
sum_pvalue_uncor <- lapply(anova_lm_uncor_tests[[1]][["Pr(>F)"]][1],sum)
#TODO -> sum up the pvalues that were less than 0.05
sum_pvalue_uncor <- lapply(unlist(anova_lm_uncor_tests[[]][["Pr(>F)"]][1]),sum)
sum_pvalue_uncor <- sum(unlist(lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]][1], length)))
sum_pvalue_uncor <- sum(unlist(lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]][1], length)))
sum_pvalue_uncor <- do.call(sum, anova_lm_uncor_tests[[]][["Pr(>F)"]][1])
anova_lm_uncor_tests[[]][["Pr(>F)"]][1]
sum_pvalue_uncor <- do.call(sum, anova_lm_uncor_tests[[names(anova_lm_uncor_tests)]][["Pr(>F)"]][1])
anova_lm_uncor_tests[[names(anova_lm_uncor_tests)]][["Pr(>F)"]][1]
sum_pvalue_uncor <- do.call(sum, anova_lm_uncor_tests[[1]][["Pr(>F)"]][1])
sum_pvalue_uncor <- sum(unlist(lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]][1], length)))
anova_lm_uncor_tests[[]][["Pr(>F)"]][1]
sum_pvalue_uncor <- sum(unlist(lapply(anova_lm_uncor_tests[[1:100]][["Pr(>F)"]][1], length)))
anova_lm_uncor_tests[[1]][["Pr(>F)"]]
anova_lm_uncor_tests[[]][["Pr(>F)"]][1]
anova_lm_uncor_tests[[1:100]][["Pr(>F)"]][1]
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
anova_lm_uncor_tests<-lapply(lm_uncor_tests,anova)
sum_pvalue_uncor <- sum(unlist(lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]][1], length)))
#sum_pvalue_uncor <- do.call(sum, anova_lm_uncor_tests[[1]][["Pr(>F)"]][1])
sum_pvalue_uncor <- lapply(unlist(anova_lm_uncor_tests[[]][["Pr(>F)"]][1]),sum)
#TODO -> sum up the pvalues that were less than 0.05
anova_lm_uncor_tests[[]]
length(anova_lm_uncor_tests[[]])
rm(list=ls()) #remove unwanted variables and start on clear slate
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("formatR")
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
#data set with no relationship between x & Y
random_corr_gen<- function(elements) {
set.seed(2)
x1<-rnorm(elements, mean = 0, sd = 0.3)# this could also be simply 1:100
set.seed(3)
y1<-rnorm(elements, mean = 3, sd = 2) #this could be pulled from any distribution (ie poisson, uniform...)
uncor_dataframe<-data.frame(x1,y1)
}
uncor_data<-random_corr_gen(100)
plot(uncor_data,
main = "Uncorrelated Data",
xlab = "X (Independent Varible)",
ylab = "Y (Dependent Varible)")
#TODO ADD LABELS AND TITLE TO PLOT
#data set with positive association between x & Y
library(mvtnorm)
library(tidyverse)
corr.val <- .9
pos_cor_gen<- function(elements) {
cor_data<-data.frame(rmvnorm(n=elements,mean=c(0,0),sigma=matrix(c(1,corr.val,corr.val,1),2,2)))
names(cor_data)[1]<-"x1"
names(cor_data)[2]<- "y1"
return(cor_data)
}
pos_cor_data<-pos_cor_gen(100)
#Random Uncorrelated Data List
uncor_data_sim<-replicate(100,random_corr_gen(100), simplify = FALSE)
#Random Correlated Data List
cor_data_sim<-replicate(100, pos_cor_gen(100), simplify = FALSE)
#cor_data_sim
#cor_data_sim[[1]] #shows the first list of 100 elements
#cor_data_sim[[1]][,1] #shows column x of the first list of 100 elements
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
anova_lm_uncor_tests<-lapply(lm_uncor_tests,anova)
sum_pvalue_uncor <- sum(lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]][1], length(anova_lm_uncor_tests[[]])))
#model 1 - uncorrelated
lm_uncor_tests<-lapply(uncor_data_sim,lm, formula = y1 ~ x1)
summary_lm_uncor_tests<-lapply(lm_uncor_tests,summary)
anova_lm_uncor_tests<-lapply(lm_uncor_tests,anova)
sum_pvalue_uncor <- sum(lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]][1], length(anova_lm_uncor_tests[[]])))
sum_pvalue_uncor <- lapply(anova_lm_uncor_tests[[]][["Pr(>F)"]][1],sum)
View(sum_pvalue_uncor)
anova_lm_uncor_tests[[]][["Pr(>F)"]][1]
anova_lm_uncor_tests[[1:100]][["Pr(>F)"]][1]
anova_lm_uncor_tests[[names(anova_lm_uncor_tests)]][["Pr(>F)"]][1]
names(anova_lm_uncor_tests)
View(anova_lm_uncor_tests)
names(anova_lm_uncor_tests[[]])
names(anova_lm_uncor_tests[]
anova_lm_uncor_tests[[1]]
anova_lm_uncor_tests
anova_lm_uncor_tests[[names(anova_lm_uncor_tests[])]][["Pr(>F)"]][1]
names(anova_lm_uncor_tests[])
names(anova_lm_uncor_tests[[]])
